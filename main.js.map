{"mappings":";;;;;;;ACAO,SAAS;IACd,qBAAO,gCAAC;kBAAG;;AACb;;;;;ACAO,MAAM,0DAAc,CAAA,GAAA,0BAAY;AAEhC,SAAS,0CAAa,YAAE,QAAQ,EAAE;IACvC,QAAQ;IACR,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qBAAO,EAAE;IACvC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qBAAO;IAEnC,kBAAkB;IAClB,CAAA,GAAA,sBAAQ,EAAE,KAEV,GAAG,EAAE,GAAG,gDAAgD;IAExD,qBACE,gCAAC,0CAAY,QAAQ;QACnB,OAAO;qBACL;wBACA;oBACA;uBACA;QACF;kBAEC;;AAGP;AAGO,MAAM,4CAAa;IACxB,MAAM,WAAE,OAAO,cAAE,UAAU,EAAE,GAAG,CAAA,GAAA,uBAAS,EAAE;IAC3C,OAAO;iBAAE;oBAAS;IAAW;AAC/B;AACO,MAAM,2CAAY;IACvB,MAAM,UAAE,MAAM,aAAE,SAAS,EAAE,GAAG,CAAA,GAAA,uBAAS,EAAE;IACzC,OAAO;gBAAE;mBAAQ;IAAU;AAC7B;AACO,MAAM,4CAAU;IACrB,MAAM,QAAE,IAAI,WAAE,OAAO,EAAE,GAAG,CAAA,GAAA,uBAAS,EAAE;IACrC,OAAO;cAAE;iBAAM;IAAQ;AACzB;;;AFpCA,MAAM,kCAAY,SAAS,cAAc,CAAC;AAC1C,MAAM,6BAAO,CAAA,GAAA,gCAAS,EAAE;AACxB,2BAAK,MAAM,eACT,gCAAC,CAAA,GAAA,yCAAW;cACV,cAAA,gCAAC,CAAA,GAAA,yCAAE","sources":["src/index.js","src/App.jsx","src/state/UserProvider.js"],"sourcesContent":["import { createRoot } from \"react-dom/client\";\nimport { App } from \"./App\";\nimport { UserProvider } from './state/UserProvider';\n\nconst container = document.getElementById(\"app\");\nconst root = createRoot(container)\nroot.render(\n  <UserProvider>\n    <App />\n  </UserProvider>\n);","export function App() {\n  return <h1>Hello world!</h1>;\n}\n","import React, { useState, createContext, useContext, useEffect } from 'react';\n\nexport const UserContext = createContext();\n\nexport function UserProvider({ children }) {\n  // state\n  const [loading, setLoading] = useState(false);\n  const [filter, setFilter] = useState();\n\n  // happens on load\n  useEffect(() => {\n\n  }, []); // use brackets to establish additional triggers\n\n  return (\n    <UserContext.Provider\n      value={{\n        loading,\n        setLoading,\n        filter,\n        setFilter\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n}\n\n// Provider custom hooks\nexport const useLoading = () => {\n  const { loading, setLoading } = useContext(UserContext);\n  return { loading, setLoading };\n}\nexport const useFilter = () => {\n  const { filter, setFilter } = useContext(UserContext);\n  return { filter, setFilter };\n}\nexport const useMenu = () => {\n  const { menu, setMenu } = useContext(UserContext);\n  return { menu, setMenu };\n}"],"names":[],"version":3,"file":"main.js.map"}