!function(){let e,t,s,a;try{self["workbox:core:7.0.0"]&&_()}catch(e){}let r=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class n extends Error{constructor(e,t){super(r(e,t)),this.name=e,this.details=t}}try{self["workbox:routing:7.0.0"]&&_()}catch(e){}let i=e=>e&&"object"==typeof e?e:{handle:e};class o{constructor(e,t,s="GET"){this.handler=i(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=i(e)}}class c extends o{constructor(e,t,s){super(({url:t})=>{let s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}let h=e=>new URL(String(e),location.href).href.replace(RegExp(`^${location.origin}`),"");class l{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{let{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){let{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(t=>{"string"==typeof t&&(t=[t]);let s=new Request(...t);return this.handleRequest({request:s,event:e})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){let s;let a=new URL(e.url,location.href);if(!a.protocol.startsWith("http"))return;let r=a.origin===location.origin,{params:n,route:i}=this.findMatchingRoute({event:t,request:e,sameOrigin:r,url:a}),o=i&&i.handler,c=e.method;if(!o&&this._defaultHandlerMap.has(c)&&(o=this._defaultHandlerMap.get(c)),!o)return;try{s=o.handle({url:a,request:e,event:t,params:n})}catch(e){s=Promise.reject(e)}let h=i&&i.catchHandler;return s instanceof Promise&&(this._catchHandler||h)&&(s=s.catch(async s=>{if(h)try{return await h.handle({url:a,request:e,event:t,params:n})}catch(e){e instanceof Error&&(s=e)}if(this._catchHandler)return this._catchHandler.handle({url:a,request:e,event:t});throw s})),s}findMatchingRoute({url:e,sameOrigin:t,request:s,event:a}){for(let r of this._routes.get(s.method)||[]){let n;let i=r.match({url:e,sameOrigin:t,request:s,event:a});if(i)return Array.isArray(n=i)&&0===n.length?n=void 0:i.constructor===Object&&0===Object.keys(i).length?n=void 0:"boolean"==typeof i&&(n=void 0),{route:r,params:n}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,i(e))}setCatchHandler(e){this._catchHandler=i(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new n("unregister-route-but-not-found-with-method",{method:e.method});let t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new n("unregister-route-route-not-registered")}}let u=()=>(e||((e=new l).addFetchListener(),e.addCacheListener()),e);function d(e,t,s){let a;if("string"==typeof e){let r=new URL(e,location.href);a=new o(({url:e})=>e.href===r.href,t,s)}else if(e instanceof RegExp)a=new c(e,t,s);else if("function"==typeof e)a=new o(e,t,s);else if(e instanceof o)a=e;else throw new n("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return u().registerRoute(a),a}let p={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},f=e=>[p.prefix,e,p.suffix].filter(e=>e&&e.length>0).join("-"),m=e=>e||f(p.runtime);function w(e,t){let s=new URL(e);for(let e of t)s.searchParams.delete(e);return s.href}async function g(e,t,s,a){let r=w(t.url,s);if(t.url===r)return e.match(t,a);let n=Object.assign(Object.assign({},a),{ignoreSearch:!0});for(let i of(await e.keys(t,n)))if(r===w(i.url,s))return e.match(i,a)}class y{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}let b=new Set;async function v(){for(let e of b)await e()}try{self["workbox:strategies:7.0.0"]&&_()}catch(e){}function x(e){return"string"==typeof e?new Request(e):e}class E{constructor(e,t){for(let s of(this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new y,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map,this._plugins))this._pluginStateMap.set(s,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){let{event:t}=this,s=x(e);if("navigate"===s.mode&&t instanceof FetchEvent&&t.preloadResponse){let e=await t.preloadResponse;if(e)return e}let a=this.hasCallback("fetchDidFail")?s.clone():null;try{for(let e of this.iterateCallbacks("requestWillFetch"))s=await e({request:s.clone(),event:t})}catch(e){if(e instanceof Error)throw new n("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}let r=s.clone();try{let e;for(let a of(e=await fetch(s,"navigate"===s.mode?void 0:this._strategy.fetchOptions),this.iterateCallbacks("fetchDidSucceed")))e=await a({event:t,request:r,response:e});return e}catch(e){throw a&&await this.runCallbacks("fetchDidFail",{error:e,event:t,originalRequest:a.clone(),request:r.clone()}),e}}async fetchAndCachePut(e){let t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){let t;let s=x(e),{cacheName:a,matchOptions:r}=this._strategy,n=await this.getCacheKey(s,"read"),i=Object.assign(Object.assign({},r),{cacheName:a});for(let e of(t=await caches.match(n,i),this.iterateCallbacks("cachedResponseWillBeUsed")))t=await e({cacheName:a,matchOptions:r,cachedResponse:t,request:n,event:this.event})||void 0;return t}async cachePut(e,t){let s=x(e);await new Promise(e=>setTimeout(e,0));let a=await this.getCacheKey(s,"write");if(!t)throw new n("cache-put-with-no-response",{url:h(a.url)});let r=await this._ensureResponseSafeToCache(t);if(!r)return!1;let{cacheName:i,matchOptions:o}=this._strategy,c=await self.caches.open(i),l=this.hasCallback("cacheDidUpdate"),u=l?await g(c,a.clone(),["__WB_REVISION__"],o):null;try{await c.put(a,l?r.clone():r)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await v(),e}for(let e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:i,oldResponse:u,newResponse:r.clone(),request:a,event:this.event});return!0}async getCacheKey(e,t){let s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(let e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=x(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(let t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(let s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(let t of this._strategy.plugins)if("function"==typeof t[e]){let s=this._pluginStateMap.get(t),a=a=>{let r=Object.assign(Object.assign({},a),{state:s});return t[e](r)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(let e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return!s&&t&&200!==t.status&&(t=void 0),t}}class D{constructor(e={}){this.cacheName=m(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){let[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});let t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a=new E(this,{event:t,request:s,params:"params"in e?e.params:void 0}),r=this._getResponse(a,s,t),n=this._awaitComplete(r,a,s,t);return[r,n]}async _getResponse(e,t,s){let a;await e.runCallbacks("handlerWillStart",{event:s,request:t});try{if(!(a=await this._handle(t,e))||"error"===a.type)throw new n("no-response",{url:t.url})}catch(r){if(r instanceof Error){for(let n of e.iterateCallbacks("handlerDidError"))if(a=await n({error:r,event:s,request:t}))break}if(!a)throw r}for(let r of e.iterateCallbacks("handlerWillRespond"))a=await r({event:s,request:t,response:a});return a}async _awaitComplete(e,t,s,a){let r,n;try{r=await e}catch(e){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:r}),await t.doneWaiting()}catch(e){e instanceof Error&&(n=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:r,error:n}),t.destroy(),n)throw n}}let q={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};try{self["workbox:cacheable-response:7.0.0"]&&_()}catch(e){}class R{constructor(e={}){this._statuses=e.statuses,this._headers=e.headers}isResponseCacheable(e){let t=!0;return this._statuses&&(t=this._statuses.includes(e.status)),this._headers&&t&&(t=Object.keys(this._headers).some(t=>e.headers.get(t)===this._headers[t])),t}}class C{constructor(e){this.cacheWillUpdate=async({response:e})=>this._cacheableResponse.isResponseCacheable(e)?e:null,this._cacheableResponse=new R(e)}}function k(e){e.then(()=>{})}let N=(e,t)=>t.some(t=>e instanceof t),S=new WeakMap,M=new WeakMap,O=new WeakMap,L=new WeakMap,A=new WeakMap,I={get(e,t,s){if(e instanceof IDBTransaction){if("done"===t)return M.get(e);if("objectStoreNames"===t)return e.objectStoreNames||O.get(e);if("store"===t)return s.objectStoreNames[1]?void 0:s.objectStore(s.objectStoreNames[0])}return T(e[t])},set:(e,t,s)=>(e[t]=s,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function T(e){var a;if(e instanceof IDBRequest)return function(e){let t=new Promise((t,s)=>{let a=()=>{e.removeEventListener("success",r),e.removeEventListener("error",n)},r=()=>{t(T(e.result)),a()},n=()=>{s(e.error),a()};e.addEventListener("success",r),e.addEventListener("error",n)});return t.then(t=>{t instanceof IDBCursor&&S.set(t,e)}).catch(()=>{}),A.set(t,e),t}(e);if(L.has(e))return L.get(e);let r="function"==typeof(a=e)?a!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(s||(s=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(a)?function(...e){return a.apply(P(this),e),T(S.get(this))}:function(...e){return T(a.apply(P(this),e))}:function(e,...t){let s=a.call(P(this),e,...t);return O.set(s,e.sort?e.sort():[e]),T(s)}:(a instanceof IDBTransaction&&function(e){if(M.has(e))return;let t=new Promise((t,s)=>{let a=()=>{e.removeEventListener("complete",r),e.removeEventListener("error",n),e.removeEventListener("abort",n)},r=()=>{t(),a()},n=()=>{s(e.error||new DOMException("AbortError","AbortError")),a()};e.addEventListener("complete",r),e.addEventListener("error",n),e.addEventListener("abort",n)});M.set(e,t)}(a),N(a,t||(t=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])))?new Proxy(a,I):a;return r!==e&&(L.set(e,r),A.set(r,e)),r}let P=e=>A.get(e),U=["get","getKey","getAll","getAllKeys","count"],B=["put","add","delete","clear"],j=new Map;function W(e,t){if(!(e instanceof IDBDatabase&&!(t in e)&&"string"==typeof t))return;if(j.get(t))return j.get(t);let s=t.replace(/FromIndex$/,""),a=t!==s,r=B.includes(s);if(!(s in(a?IDBIndex:IDBObjectStore).prototype)||!(r||U.includes(s)))return;let n=async function(e,...t){let n=this.transaction(e,r?"readwrite":"readonly"),i=n.store;return a&&(i=i.index(t.shift())),(await Promise.all([i[s](...t),r&&n.done]))[0]};return j.set(t,n),n}I={...a=I,get:(e,t,s)=>W(e,t)||a.get(e,t,s),has:(e,t)=>!!W(e,t)||a.has(e,t)};try{self["workbox:expiration:7.0.0"]&&_()}catch(e){}let H="cache-entries",K=e=>{let t=new URL(e,location.href);return t.hash="",t.href};class F{constructor(e){this._db=null,this._cacheName=e}_upgradeDb(e){let t=e.createObjectStore(H,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&function(e,{blocked:t}={}){let s=indexedDB.deleteDatabase(e);t&&s.addEventListener("blocked",e=>t(e.oldVersion,e)),T(s).then(()=>void 0)}(this._cacheName)}async setTimestamp(e,t){let s={url:e=K(e),timestamp:t,cacheName:this._cacheName,id:this._getId(e)},a=(await this.getDb()).transaction(H,"readwrite",{durability:"relaxed"});await a.store.put(s),await a.done}async getTimestamp(e){let t=await this.getDb(),s=await t.get(H,this._getId(e));return null==s?void 0:s.timestamp}async expireEntries(e,t){let s=await this.getDb(),a=await s.transaction(H).store.index("timestamp").openCursor(null,"prev"),r=[],n=0;for(;a;){let s=a.value;s.cacheName===this._cacheName&&(e&&s.timestamp<e||t&&n>=t?r.push(a.value):n++),a=await a.continue()}let i=[];for(let e of r)await s.delete(H,e.id),i.push(e.url);return i}_getId(e){return this._cacheName+"|"+K(e)}async getDb(){return this._db||(this._db=await function(e,t,{blocked:s,upgrade:a,blocking:r,terminated:n}={}){let i=indexedDB.open(e,1),o=T(i);return a&&i.addEventListener("upgradeneeded",e=>{a(T(i.result),e.oldVersion,e.newVersion,T(i.transaction),e)}),s&&i.addEventListener("blocked",e=>s(e.oldVersion,e.newVersion,e)),o.then(e=>{n&&e.addEventListener("close",()=>n()),r&&e.addEventListener("versionchange",e=>r(e.oldVersion,e.newVersion,e))}).catch(()=>{}),o}("workbox-expiration",0,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}}class V{constructor(e,t={}){this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new F(e)}async expireEntries(){if(this._isRunning){this._rerunRequested=!0;return}this._isRunning=!0;let e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),s=await self.caches.open(this._cacheName);for(let e of t)await s.delete(e,this._matchOptions);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,k(this.expireEntries()))}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(!this._maxAgeSeconds)return!1;{let t=await this._timestampModel.getTimestamp(e),s=Date.now()-1e3*this._maxAgeSeconds;return void 0===t||t<s}}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}d(({request:e})=>"navigate"===e.mode,new class extends D{constructor(e={}){super(e),this.plugins.some(e=>"cacheWillUpdate"in e)||this.plugins.unshift(q),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,t){let s;let a=[],r=[];if(this._networkTimeoutSeconds){let{id:n,promise:i}=this._getTimeoutPromise({request:e,logs:a,handler:t});s=n,r.push(i)}let i=this._getNetworkPromise({timeoutId:s,request:e,logs:a,handler:t});r.push(i);let o=await t.waitUntil((async()=>await t.waitUntil(Promise.race(r))||await i)());if(!o)throw new n("no-response",{url:e.url});return o}_getTimeoutPromise({request:e,logs:t,handler:s}){let a;return{promise:new Promise(t=>{a=setTimeout(async()=>{t(await s.cacheMatch(e))},1e3*this._networkTimeoutSeconds)}),id:a}}async _getNetworkPromise({timeoutId:e,request:t,logs:s,handler:a}){let r,n;try{n=await a.fetchAndCachePut(t)}catch(e){e instanceof Error&&(r=e)}return e&&clearTimeout(e),(r||!n)&&(n=await a.cacheMatch(t)),n}}({cacheName:"pages",plugins:[new C({statuses:[200]})]})),d(({request:e})=>"style"===e.destination||"script"===e.destination||"worker"===e.destination,new class extends D{constructor(e={}){super(e),this.plugins.some(e=>"cacheWillUpdate"in e)||this.plugins.unshift(q)}async _handle(e,t){let s;let a=t.fetchAndCachePut(e).catch(()=>{});t.waitUntil(a);let r=await t.cacheMatch(e);if(r);else try{r=await a}catch(e){e instanceof Error&&(s=e)}if(!r)throw new n("no-response",{url:e.url,error:s});return r}}({cacheName:"assets",plugins:[new C({statuses:[200]})]})),d(({request:e})=>"image"===e.destination,new class extends D{async _handle(e,t){let s,a=await t.cacheMatch(e);if(!a)try{a=await t.fetchAndCachePut(e)}catch(e){e instanceof Error&&(s=e)}if(!a)throw new n("no-response",{url:e.url,error:s});return a}}({cacheName:"images",plugins:[new C({statuses:[200]}),new class{constructor(e={}){if(this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:a})=>{if(!a)return null;let r=this._isResponseDateFresh(a),n=this._getCacheExpiration(s);k(n.expireEntries());let i=n.updateTimestamp(t.url);if(e)try{e.waitUntil(i)}catch(e){}return r?a:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{let s=this._getCacheExpiration(e);await s.updateTimestamp(t.url),await s.expireEntries()},this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError){var t;t=()=>this.deleteCacheAndMetadata(),b.add(t)}}_getCacheExpiration(e){if(e===m())throw new n("expire-custom-caches-only");let t=this._cacheExpirations.get(e);return t||(t=new V(e,this._config),this._cacheExpirations.set(e,t)),t}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;let t=this._getDateHeaderTimestamp(e);return null===t||t>=Date.now()-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;let t=new Date(e.headers.get("date")).getTime();return isNaN(t)?null:t}async deleteCacheAndMetadata(){for(let[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}({maxEntries:60,maxAgeSeconds:2592e3})]}))}();
//# sourceMappingURL=service-worker.js.map
